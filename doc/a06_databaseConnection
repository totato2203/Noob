# java를 통한 데이터베이스 연동 처리
1. 지식계열화 순서
	1) java에 대한 이해와 실습
		메모리 로딩
		예외 처리
	2) sql에 대한 이해와 실습
	3) java 프로그램의 DB 서버 연동 필요 환경 이해
		- server, client 개념 이해
			서버 : oracle database server
			클라이언트 : java 클라이언트 프로그래밍, 웹 연동 프로그래밍
		- jdbc 드라이버에 대한 이해
			접속 시 필요한 프로그래밍
				- 공통 : jdbc 드라이버
				- 개별 및 꼭 코드가 추가적으로 필요로 하는 부분 : 개발자 코딩
		- 필요 접속 정보 : ip, port, sid, 계정, 비밀번호
	4) 연동을 위한 핵심 객체와 순서에 대한 이해
		- 핵심 객체
			연결 객체 Connection : 접속 정보 + jdbc 드라이버
			대화 객체 Statement(sql) : sql - DB서버에 이용하는 명령어
			결과 객체 ResultSet(data) : 필요로 하는 정보(data)
			자원 해제 위에 나열된 DB서버 접속과 대화 및 결과를 받는 객체들의 자원들을 해제
				try{}catch, 각 객체의 메모리 자원을 해제
		- 처리 순서
	5) DB 연동 처리 클래스 구조
		- 필드 선언 : 핵심 객체들을 필드로 선언하여, 기능 메서드에서 필요로 할 때 사용할 수 있게 선언
		- 연동 메소드 선언(공통) : DB서버와 연동할 때 사용
		- 기능 메소드 선언 : 공통 필드와 연동 메소드를 활용해서 sql에 따라서 기능처리 하는 메소드
	6) 기능 메소드 처리
		- 연결 처리 공통 메소드
		- 조회 처리 메소드
		- 등록 처리 메소드
		- 수정 처리 메소드
		- 삭제 처리 메소드
	7) 다양한 sql을 통한 연습
	
2. DAO(Database Access Object) 처리 순서
	1) main()가 있는 class 생성
	2) 공통 필드 선언
	3) 공통 연결 기능 메소드 선언
	4) 데이터 처리가 객체 형태인 경우 - 단위 VO 클래스 언언
	5) 기능메소드 선언
		리턴값 선언
			- 결과값이 있는 기능 메소드 : DB서버로부터 데이터를 가져오는 경우
			- 결과값이 없는 기능 메소드 : DB서버에 데이터를 입력/수정/삭제 처리하는 경우
		메소드명 선언
		매개변수 선언 : DB에 입력/수정/삭제 처리할 데이터 또는 WHERE에 들어갈 데이터를 선언한다.
			- 순서에 따른 프로세스 처리